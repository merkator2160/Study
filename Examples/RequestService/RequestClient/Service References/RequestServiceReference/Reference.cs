//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RequestClient.RequestServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestType", Namespace="http://schemas.datacontract.org/2004/07/RequestService.Common.Models")]
    public enum RequestType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Meeting = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Seminar = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JuridicalTracking = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestBase", Namespace="http://schemas.datacontract.org/2004/07/RequestService.Common.Models.Request")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RequestClient.RequestServiceReference.SeminarRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RequestClient.RequestServiceReference.MeetingRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RequestClient.RequestServiceReference.JuridicalTrackingRequest))]
    public partial class RequestBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SeminarRequest", Namespace="http://schemas.datacontract.org/2004/07/RequestService.Common.Models.Request")]
    [System.SerializableAttribute()]
    public partial class SeminarRequest : RequestClient.RequestServiceReference.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeetingRequest", Namespace="http://schemas.datacontract.org/2004/07/RequestService.Common.Models.Request")]
    [System.SerializableAttribute()]
    public partial class MeetingRequest : RequestClient.RequestServiceReference.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JuridicalTrackingRequest", Namespace="http://schemas.datacontract.org/2004/07/RequestService.Common.Models.Request")]
    [System.SerializableAttribute()]
    public partial class JuridicalTrackingRequest : RequestClient.RequestServiceReference.RequestBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestParameters", Namespace="http://schemas.datacontract.org/2004/07/RequestService.Common.Models.Request")]
    [System.SerializableAttribute()]
    public partial class RequestParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RequestClient.RequestServiceReference.RequestBase RequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RequestClient.RequestServiceReference.RequestBase Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RequestServiceReference.IRequestService")]
    public interface IRequestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/AddUser", ReplyAction="http://tempuri.org/IRequestService/AddUserResponse")]
        System.Guid AddUser(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/AddUser", ReplyAction="http://tempuri.org/IRequestService/AddUserResponse")]
        System.Threading.Tasks.Task<System.Guid> AddUserAsync(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/AddRequest", ReplyAction="http://tempuri.org/IRequestService/AddRequestResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RequestClient.RequestServiceReference.RequestType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RequestClient.RequestServiceReference.RequestBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RequestClient.RequestServiceReference.SeminarRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RequestClient.RequestServiceReference.MeetingRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RequestClient.RequestServiceReference.JuridicalTrackingRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RequestClient.RequestServiceReference.RequestParameters))]
        bool AddRequest(RequestClient.RequestServiceReference.RequestType requestType, object parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/AddRequest", ReplyAction="http://tempuri.org/IRequestService/AddRequestResponse")]
        System.Threading.Tasks.Task<bool> AddRequestAsync(RequestClient.RequestServiceReference.RequestType requestType, object parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/ConnectionRequest", ReplyAction="http://tempuri.org/IRequestService/ConnectionRequestResponse")]
        bool ConnectionRequest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRequestService/ConnectionRequest", ReplyAction="http://tempuri.org/IRequestService/ConnectionRequestResponse")]
        System.Threading.Tasks.Task<bool> ConnectionRequestAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRequestServiceChannel : RequestClient.RequestServiceReference.IRequestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestServiceClient : System.ServiceModel.ClientBase<RequestClient.RequestServiceReference.IRequestService>, RequestClient.RequestServiceReference.IRequestService {
        
        public RequestServiceClient() {
        }
        
        public RequestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RequestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RequestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Guid AddUser(string firstName, string lastName) {
            return base.Channel.AddUser(firstName, lastName);
        }
        
        public System.Threading.Tasks.Task<System.Guid> AddUserAsync(string firstName, string lastName) {
            return base.Channel.AddUserAsync(firstName, lastName);
        }
        
        public bool AddRequest(RequestClient.RequestServiceReference.RequestType requestType, object parameters) {
            return base.Channel.AddRequest(requestType, parameters);
        }
        
        public System.Threading.Tasks.Task<bool> AddRequestAsync(RequestClient.RequestServiceReference.RequestType requestType, object parameters) {
            return base.Channel.AddRequestAsync(requestType, parameters);
        }
        
        public bool ConnectionRequest() {
            return base.Channel.ConnectionRequest();
        }
        
        public System.Threading.Tasks.Task<bool> ConnectionRequestAsync() {
            return base.Channel.ConnectionRequestAsync();
        }
    }
}
